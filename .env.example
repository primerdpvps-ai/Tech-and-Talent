# =============================================================================
# TTS PMS Environment Configuration
# =============================================================================
# Copy this file to .env and update the values for your environment
# For Docker development, most defaults will work out of the box

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MySQL database connection string
# For Docker: mysql://tts_user:tts_password@mysql:3306/tts_pms
# For local: mysql://username:password@localhost:3306/tts_pms
DATABASE_URL="mysql://tts_user:tts_password@localhost:3306/tts_pms"

# MySQL Docker configuration (used by docker-compose)
DB_NAME="tts_pms"
DB_USER="tts_user"
DB_PASSWORD="tts_password"
DB_ROOT_PASSWORD="rootpassword"

# =============================================================================
# NEXTAUTH CONFIGURATION
# =============================================================================
# NextAuth secret key - generate with: openssl rand -base64 32
NEXTAUTH_SECRET="your-nextauth-secret-key-here-generate-with-openssl-rand-base64-32"

# NextAuth URL - should match your application URL
NEXTAUTH_URL="http://localhost:3000"

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# For development with Docker, Mailhog is used (no configuration needed)
# For production, configure your SMTP provider

# Mailhog (Docker development) - automatically configured
SMTP_HOST="localhost"
SMTP_PORT=1025
SMTP_USER=""
SMTP_PASSWORD=""
SMTP_FROM="noreply@tts-pms.local"

# Production SMTP configuration (uncomment and configure for production)
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT=587
# SMTP_USER="your-email@gmail.com"
# SMTP_PASSWORD="your-app-password"
# SMTP_FROM="noreply@tts-pms.com"
# SMTP_SECURE=true

# =============================================================================
# S3-COMPATIBLE STORAGE (MinIO/AWS S3)
# =============================================================================
# MinIO (Docker development) configuration
S3_ENDPOINT="http://localhost:9000"
S3_REGION="us-east-1"
S3_ACCESS_KEY_ID="minioadmin"
S3_SECRET_ACCESS_KEY="minioadmin123"
S3_BUCKET_NAME="tts-pms-uploads"
S3_PUBLIC_URL="http://localhost:9000"

# MinIO Docker configuration
MINIO_ROOT_USER="minioadmin"
MINIO_ROOT_PASSWORD="minioadmin123"

# AWS S3 configuration (for production)
# S3_ENDPOINT="" # Leave empty for AWS S3
# S3_REGION="us-east-1"
# S3_ACCESS_KEY_ID="your-aws-access-key"
# S3_SECRET_ACCESS_KEY="your-aws-secret-key"
# S3_BUCKET_NAME="your-s3-bucket-name"
# S3_PUBLIC_URL="https://your-bucket.s3.amazonaws.com"

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis for caching and sessions
REDIS_URL="redis://:redispassword@localhost:6379"
REDIS_PASSWORD="redispassword"

# =============================================================================
# JWT & SECURITY CONFIGURATION
# =============================================================================
# JWT secret key - generate with: openssl rand -base64 32
JWT_SECRET="your-jwt-secret-key-here-generate-with-openssl-rand-base64-32"

# Agent API device secret - generate with: openssl rand -hex 32
AGENT_DEVICE_SECRET="your-agent-device-secret-key-generate-with-openssl-rand-hex-32"

# Admin API token for job management
ADMIN_API_TOKEN="admin-secret-token-123-change-in-production"

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Node environment (development, production, test)
NODE_ENV="development"

# Enable background jobs (true/false)
ENABLE_JOBS="true"

# Timezone for job scheduling
TZ="UTC"

# Allowed email domains for registration (comma-separated)
ALLOWED_EMAIL_DOMAINS="gmail.com,company.com"

# =============================================================================
# BUSINESS RULES CONFIGURATION
# =============================================================================
# Operational working hours (24-hour format)
APP_PUBLIC_OPERATIONAL_WINDOW="09:00-17:00"

# Special operational window for extended hours
APP_PUBLIC_SPECIAL_WINDOW="17:00-21:00"

# Hourly rates (in USD)
APP_BASE_HOURLY_RATE=15
APP_MANAGER_HOURLY_RATE=25

# Bonus amounts (in USD)
APP_STREAK_BONUS=500
APP_PERFORMANCE_BONUS_90=100
APP_PERFORMANCE_BONUS_95=150
APP_PERFECT_ATTENDANCE_WEEKLY=50
APP_REFERRAL_BONUS=500

# Security and compliance
APP_SECURITY_FUND=1000
APP_MINIMUM_DAILY_HOURS=6

# Penalty amounts (in USD)
APP_PENALTY_LATE_15MIN=5
APP_PENALTY_LATE_30MIN=10
APP_PENALTY_LATE_60MIN=25
APP_PENALTY_UNEXCUSED_ABSENCE=50
APP_PENALTY_WEEKEND_LEAVE=15
APP_PENALTY_INSUFFICIENT_NOTICE=25
APP_PENALTY_MISSING_WEEKLY_UPLOAD=30

# =============================================================================
# SMS PROVIDER CONFIGURATION (Optional)
# =============================================================================
# SMS provider for OTP (twilio, aws-sns, nexmo)
SMS_PROVIDER_TYPE="twilio"
SMS_PROVIDER_API_KEY="your-sms-api-key"
SMS_PROVIDER_API_SECRET="your-sms-api-secret"
SMS_PROVIDER_FROM_NUMBER="+1234567890"

# Twilio specific
TWILIO_ACCOUNT_SID="your-twilio-account-sid"
TWILIO_AUTH_TOKEN="your-twilio-auth-token"
TWILIO_PHONE_NUMBER="+1234567890"

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
# Log level (error, warn, info, debug)
LOG_LEVEL="info"

# Enable request logging
ENABLE_REQUEST_LOGGING="true"

# Sentry DSN for error tracking (optional)
# SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================
# Enable Next.js telemetry (true/false)
NEXT_TELEMETRY_DISABLED="true"

# Enable Prisma debug logging
# DEBUG="prisma:query"

# =============================================================================
# DOCKER COMPOSE OVERRIDES
# =============================================================================
# These variables are used by docker-compose.yml
# You can override them here if needed

# Ports (change if you have conflicts)
# WEB_PORT=3000
# MYSQL_PORT=3306
# MINIO_API_PORT=9000
# MINIO_CONSOLE_PORT=9001
# MAILHOG_SMTP_PORT=1025
# MAILHOG_WEB_PORT=8025
# REDIS_PORT=6379
# PRISMA_STUDIO_PORT=5555
